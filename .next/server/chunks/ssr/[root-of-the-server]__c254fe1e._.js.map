{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 207, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/ai/genkit.ts"],"sourcesContent":["import {genkit} from 'genkit';\nimport {googleAI} from '@genkit-ai/googleai';\n\nexport const ai = genkit({\n  plugins: [googleAI()],\n  model: 'googleai/gemini-2.0-flash',\n});\n"],"names":[],"mappings":";;;AAAA;AAAA;AACA;AAAA;;;AAEO,MAAM,KAAK,CAAA,GAAA,uIAAA,CAAA,SAAM,AAAD,EAAE;IACvB,SAAS;QAAC,CAAA,GAAA,2KAAA,CAAA,WAAQ,AAAD;KAAI;IACrB,OAAO;AACT","debugId":null}},
    {"offset": {"line": 228, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/ai/flows/generate-prompt-from-journal.ts"],"sourcesContent":["'use server';\n/**\n * @fileOverview An AI agent that generates personalized prompts based on user journal entries.\n *\n * - generatePromptFromJournal - A function that generates a personalized prompt.\n * - GeneratePromptFromJournalInput - The input type for the generatePromptFromJournal function.\n * - GeneratePromptFromJournalOutput - The return type for the generatePromptFromJournal function.\n */\n\nimport {ai} from '@/ai/genkit';\nimport {z} from 'genkit';\n\nconst GeneratePromptFromJournalInputSchema = z.object({\n  journalEntries: z.string().describe('The user journal entries.'),\n  verse: z.string().describe('The scripture verse for generating the prompt.'),\n});\nexport type GeneratePromptFromJournalInput = z.infer<typeof GeneratePromptFromJournalInputSchema>;\n\nconst GeneratePromptFromJournalOutputSchema = z.object({\n  prompt: z.string().describe('A personalized prompt to stimulate thought and reflection on scripture.'),\n});\nexport type GeneratePromptFromJournalOutput = z.infer<typeof GeneratePromptFromJournalOutputSchema>;\n\nexport async function generatePromptFromJournal(input: GeneratePromptFromJournalInput): Promise<GeneratePromptFromJournalOutput> {\n  return generatePromptFromJournalFlow(input);\n}\n\nconst prompt = ai.definePrompt({\n  name: 'generatePromptFromJournalPrompt',\n  input: {schema: GeneratePromptFromJournalInputSchema},\n  output: {schema: GeneratePromptFromJournalOutputSchema},\n  prompt: `You are a spiritual guide that suggests personalized prompts to stimulate thought and reflection on scripture.\n\n  Given the following scripture verse:\n  {{verse}}\n\n  And the following journal entries:\n  {{journalEntries}}\n\n  Generate a prompt that is tailored to the user's previous journal entries, so that they can gain deeper insights and strengthen their connection to the material.\n  `,\n});\n\nconst generatePromptFromJournalFlow = ai.defineFlow(\n  {\n    name: 'generatePromptFromJournalFlow',\n    inputSchema: GeneratePromptFromJournalInputSchema,\n    outputSchema: GeneratePromptFromJournalOutputSchema,\n  },\n  async input => {\n    const {output} = await prompt(input);\n    return output!;\n  }\n);\n"],"names":[],"mappings":";;;;;AACA;;;;;;CAMC,GAED;AACA;AAAA;;;;;;AAEA,MAAM,uCAAuC,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IACpD,gBAAgB,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;IACpC,OAAO,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;AAC7B;AAGA,MAAM,wCAAwC,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IACrD,QAAQ,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;AAC9B;AAGO,eAAe,0BAA0B,KAAqC;IACnF,OAAO,8BAA8B;AACvC;AAEA,MAAM,SAAS,mHAAA,CAAA,KAAE,CAAC,YAAY,CAAC;IAC7B,MAAM;IACN,OAAO;QAAC,QAAQ;IAAoC;IACpD,QAAQ;QAAC,QAAQ;IAAqC;IACtD,QAAQ,CAAC;;;;;;;;;EAST,CAAC;AACH;AAEA,MAAM,gCAAgC,mHAAA,CAAA,KAAE,CAAC,UAAU,CACjD;IACE,MAAM;IACN,aAAa;IACb,cAAc;AAChB,GACA,OAAM;IACJ,MAAM,EAAC,MAAM,EAAC,GAAG,MAAM,OAAO;IAC9B,OAAO;AACT;;;IA7BoB;;AAAA,+OAAA","debugId":null}},
    {"offset": {"line": 295, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/ai/flows/study-buddy-flow.ts"],"sourcesContent":["'use server';\n/**\n * @fileOverview An AI agent that acts as a scripture study buddy.\n *\n * - studyBuddy - A function that provides answers to scripture questions.\n * - StudyBuddyInput - The input type for the studyBuddy function.\n * - StudyBuddyOutput - The return type for the studyBuddy function.\n */\n\nimport {ai} from '@/ai/genkit';\nimport {z} from 'genkit';\n\nconst UserContextSchema = z.object({\n  themes_studied: z.array(z.string()).describe(\"A list of spiritual themes the user has studied previously.\"),\n  emotional_struggles: z.array(z.string()).describe(\"A list of emotional struggles the user has mentioned.\"),\n  spiritual_goals: z.array(z.string()).describe(\"A list of spiritual goals the user has set.\"),\n}).optional();\n\nconst StudyBuddyInputSchema = z.object({\n  scripture: z.string().describe('The scripture reference the user is asking about.'),\n  question: z.string().describe('The user\\'s question about the scripture.'),\n  userContext: UserContextSchema,\n});\nexport type StudyBuddyInput = z.infer<typeof StudyBuddyInputSchema>;\n\nconst StudyBuddyOutputSchema = z.object({\n  verse: z.object({\n    reference: z.string().describe('Canonical Bible verse with full reference.'),\n    text: z.string().describe('The full text of the verse.'),\n  }),\n  explanation: z\n    .string()\n    .describe(\n      'Doctrinally sound and emotionally intelligent summary in a Christlike tone.'\n    ),\n  application: z\n    .string()\n    .describe(\n      'Real-world reflection or behavioral call-to-action modeled after Jesus’ teachings.'\n    ),\n  prayer: z\n    .string()\n    .optional()\n    .describe('Short, simple prayer aligned to the theme of the response.'),\n  cross_reference: z\n    .array(\n      z.object({\n        reference: z.string().describe('The reference of a supporting verse.'),\n        text: z.string().describe('The text of the supporting verse.'),\n      })\n    )\n    .describe(\n      'One or more supporting verses from elsewhere in Scripture, especially Christ’s own words.'\n    ),\n  identified_themes: z.array(z.string()).describe('A list of spiritual themes identified in the user query and your response, which will be used to update the user\\'s profile.'),\n  identified_emotions: z.array(z.string()).describe('A list of emotions identified in the user query, which will be used to update the user\\'s profile.'),\n});\nexport type StudyBuddyOutput = z.infer<typeof StudyBuddyOutputSchema>;\n\nexport async function studyBuddy(input: StudyBuddyInput): Promise<StudyBuddyOutput> {\n  return studyBuddyFlow(input);\n}\n\nconst prompt = ai.definePrompt({\n  name: 'studyBuddyPrompt',\n  input: {schema: StudyBuddyInputSchema},\n  output: {schema: StudyBuddyOutputSchema},\n  prompt: `You are a Christ-centered Scripture Study Assistant. You behave like a wise, loving spiritual companion, remembering prior conversations and responding with empathy and grace.\n\n{{#if userContext}}\nYou have memory of the user's past interactions. Here is their spiritual context:\n{{#if userContext.themes_studied}}\n- Previously Studied Themes: {{#each userContext.themes_studied}}{{{this}}}{{#unless @last}}, {{/unless}}{{/each}}\n{{/if}}\n{{#if userContext.emotional_struggles}}\n- Mentioned Emotional Struggles: {{#each userContext.emotional_struggles}}{{{this}}}{{#unless @last}}, {{/unless}}{{/each}}\n{{/if}}\n{{#if userContext.spiritual_goals}}\n- Stated Spiritual Goals: {{#each userContext.spiritual_goals}}{{{this}}}{{#unless @last}}, {{/unless}}{{/each}}\n{{/if}}\n\nUse this context to inform your response. Start with a gentle, personalized check-in before addressing their current query. For example: \"I remember you were struggling with fear. Here's a passage that might bring comfort today.\" or \"Last week we explored patience—would you like to reflect on how that's been?\"\n{{/if}}\n\nPlease respond to the user’s query in the following structured JSON format:\n1.  **verse**: Provide an accurate quotation and reference for a relevant Bible verse.\n2.  **explanation**: Give a clear, doctrinally sound summary of what this verse means, in an emotionally intelligent and Christlike tone.\n3.  **application**: Offer a gentle, Christlike encouragement or a practical action the user can take (e.g., forgiveness, worship, prayer, reflection, humility).\n4.  **prayer** (optional): Write a 1-2 sentence prayer that is intimate, Christ-focused, and aligned to the theme.\n5.  **cross_reference**: List 1-2 supporting verses that harmonize with the main theme, preferably including Christ's own words.\n6.  **identified_themes**: Analyze the user's query and your response, and list any spiritual themes found (e.g., \"patience\", \"forgiveness\").\n7.  **identified_emotions**: Analyze the user's query and list any emotions mentioned (e.g., \"fear\", \"guilt\").\n\nThe user is asking about this scripture: {{{scripture}}}.\nTheir specific question is: {{{question}}}\n\nBase your response on their query.\n  `,\n});\n\nconst studyBuddyFlow = ai.defineFlow(\n  {\n    name: 'studyBuddyFlow',\n    inputSchema: StudyBuddyInputSchema,\n    outputSchema: StudyBuddyOutputSchema,\n  },\n  async input => {\n    const {output} = await prompt(input);\n    return output!;\n  }\n);\n"],"names":[],"mappings":";;;;;AACA;;;;;;CAMC,GAED;AACA;AAAA;;;;;;AAEA,MAAM,oBAAoB,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IACjC,gBAAgB,uIAAA,CAAA,IAAC,CAAC,KAAK,CAAC,uIAAA,CAAA,IAAC,CAAC,MAAM,IAAI,QAAQ,CAAC;IAC7C,qBAAqB,uIAAA,CAAA,IAAC,CAAC,KAAK,CAAC,uIAAA,CAAA,IAAC,CAAC,MAAM,IAAI,QAAQ,CAAC;IAClD,iBAAiB,uIAAA,CAAA,IAAC,CAAC,KAAK,CAAC,uIAAA,CAAA,IAAC,CAAC,MAAM,IAAI,QAAQ,CAAC;AAChD,GAAG,QAAQ;AAEX,MAAM,wBAAwB,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IACrC,WAAW,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;IAC/B,UAAU,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;IAC9B,aAAa;AACf;AAGA,MAAM,yBAAyB,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IACtC,OAAO,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;QACd,WAAW,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;QAC/B,MAAM,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;IAC5B;IACA,aAAa,uIAAA,CAAA,IAAC,CACX,MAAM,GACN,QAAQ,CACP;IAEJ,aAAa,uIAAA,CAAA,IAAC,CACX,MAAM,GACN,QAAQ,CACP;IAEJ,QAAQ,uIAAA,CAAA,IAAC,CACN,MAAM,GACN,QAAQ,GACR,QAAQ,CAAC;IACZ,iBAAiB,uIAAA,CAAA,IAAC,CACf,KAAK,CACJ,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;QACP,WAAW,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;QAC/B,MAAM,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;IAC5B,IAED,QAAQ,CACP;IAEJ,mBAAmB,uIAAA,CAAA,IAAC,CAAC,KAAK,CAAC,uIAAA,CAAA,IAAC,CAAC,MAAM,IAAI,QAAQ,CAAC;IAChD,qBAAqB,uIAAA,CAAA,IAAC,CAAC,KAAK,CAAC,uIAAA,CAAA,IAAC,CAAC,MAAM,IAAI,QAAQ,CAAC;AACpD;AAGO,eAAe,WAAW,KAAsB;IACrD,OAAO,eAAe;AACxB;AAEA,MAAM,SAAS,mHAAA,CAAA,KAAE,CAAC,YAAY,CAAC;IAC7B,MAAM;IACN,OAAO;QAAC,QAAQ;IAAqB;IACrC,QAAQ;QAAC,QAAQ;IAAsB;IACvC,QAAQ,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EA8BT,CAAC;AACH;AAEA,MAAM,iBAAiB,mHAAA,CAAA,KAAE,CAAC,UAAU,CAClC;IACE,MAAM;IACN,aAAa;IACb,cAAc;AAChB,GACA,OAAM;IACJ,MAAM,EAAC,MAAM,EAAC,GAAG,MAAM,OAAO;IAC9B,OAAO;AACT;;;IAlDoB;;AAAA,+OAAA","debugId":null}},
    {"offset": {"line": 401, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/actions.ts"],"sourcesContent":["\n'use server';\n\nimport { generatePromptFromJournal, GeneratePromptFromJournalOutput } from '@/ai/flows/generate-prompt-from-journal';\nimport { studyBuddy, StudyBuddyOutput } from '@/ai/flows/study-buddy-flow';\nimport { z } from 'zod';\n\nconst journalFormSchema = z.object({\n  journalEntries: z.string(),\n  verse: z.string(),\n});\n\ntype JournalState = {\n  prompt?: string;\n  error?: string | null;\n}\n\nexport async function getAIPrompt(prevState: JournalState, formData: FormData): Promise<JournalState> {\n  const validatedFields = journalFormSchema.safeParse({\n    journalEntries: formData.get('journalEntries'),\n    verse: formData.get('verse'),\n  });\n\n  if (!validatedFields.success) {\n    return { error: 'Invalid form data. Please try again.' };\n  }\n\n  try {\n    const result: GeneratePromptFromJournalOutput = await generatePromptFromJournal(validatedFields.data);\n    return { prompt: result.prompt, error: null };\n  } catch (error) {\n    console.error('Error generating prompt:', error);\n    return { error: 'Failed to generate a new prompt. Please try again later.' };\n  }\n}\n\nconst studyBuddyFormSchema = z.object({\n  scripture: z.string().min(1, 'Scripture reference is required.'),\n  question: z.string().min(1, 'Question is required.'),\n  userContext: z.string(),\n});\n\ntype StudyBuddyState = {\n  answer?: StudyBuddyOutput | null;\n  error?: string | null;\n}\n\nexport async function getStudyBuddyResponse(prevState: StudyBuddyState, formData: FormData): Promise<StudyBuddyState> {\n  const validatedFields = studyBuddyFormSchema.safeParse({\n    scripture: formData.get('scripture'),\n    question: formData.get('question'),\n    userContext: formData.get('userContext'),\n  });\n\n  if (!validatedFields.success) {\n    const errors = validatedFields.error.flatten().fieldErrors;\n    const errorString = [\n      ...(errors.scripture || []),\n      ...(errors.question || []),\n      ...(errors.userContext || []),\n    ].join(' ');\n    return { error: `Invalid form data. ${errorString}`.trim() };\n  }\n\n  try {\n    const userContext = JSON.parse(validatedFields.data.userContext);\n    const result: StudyBuddyOutput = await studyBuddy({\n      scripture: validatedFields.data.scripture,\n      question: validatedFields.data.question,\n      userContext: userContext,\n    });\n    return { answer: result, error: null };\n  } catch (error) {\n    console.error('Error getting study buddy response:', error);\n    return { error: 'Failed to get a response from the study buddy. Please try again later.' };\n  }\n}\n"],"names":[],"mappings":";;;;;;AAGA;AACA;AACA;;;;;;;AAEA,MAAM,oBAAoB,oIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IACjC,gBAAgB,oIAAA,CAAA,IAAC,CAAC,MAAM;IACxB,OAAO,oIAAA,CAAA,IAAC,CAAC,MAAM;AACjB;AAOO,eAAe,YAAY,SAAuB,EAAE,QAAkB;IAC3E,MAAM,kBAAkB,kBAAkB,SAAS,CAAC;QAClD,gBAAgB,SAAS,GAAG,CAAC;QAC7B,OAAO,SAAS,GAAG,CAAC;IACtB;IAEA,IAAI,CAAC,gBAAgB,OAAO,EAAE;QAC5B,OAAO;YAAE,OAAO;QAAuC;IACzD;IAEA,IAAI;QACF,MAAM,SAA0C,MAAM,CAAA,GAAA,2JAAA,CAAA,4BAAyB,AAAD,EAAE,gBAAgB,IAAI;QACpG,OAAO;YAAE,QAAQ,OAAO,MAAM;YAAE,OAAO;QAAK;IAC9C,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,4BAA4B;QAC1C,OAAO;YAAE,OAAO;QAA2D;IAC7E;AACF;AAEA,MAAM,uBAAuB,oIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IACpC,WAAW,oIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,GAAG,CAAC,GAAG;IAC7B,UAAU,oIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,GAAG,CAAC,GAAG;IAC5B,aAAa,oIAAA,CAAA,IAAC,CAAC,MAAM;AACvB;AAOO,eAAe,sBAAsB,SAA0B,EAAE,QAAkB;IACxF,MAAM,kBAAkB,qBAAqB,SAAS,CAAC;QACrD,WAAW,SAAS,GAAG,CAAC;QACxB,UAAU,SAAS,GAAG,CAAC;QACvB,aAAa,SAAS,GAAG,CAAC;IAC5B;IAEA,IAAI,CAAC,gBAAgB,OAAO,EAAE;QAC5B,MAAM,SAAS,gBAAgB,KAAK,CAAC,OAAO,GAAG,WAAW;QAC1D,MAAM,cAAc;eACd,OAAO,SAAS,IAAI,EAAE;eACtB,OAAO,QAAQ,IAAI,EAAE;eACrB,OAAO,WAAW,IAAI,EAAE;SAC7B,CAAC,IAAI,CAAC;QACP,OAAO;YAAE,OAAO,CAAC,mBAAmB,EAAE,aAAa,CAAC,IAAI;QAAG;IAC7D;IAEA,IAAI;QACF,MAAM,cAAc,KAAK,KAAK,CAAC,gBAAgB,IAAI,CAAC,WAAW;QAC/D,MAAM,SAA2B,MAAM,CAAA,GAAA,4IAAA,CAAA,aAAU,AAAD,EAAE;YAChD,WAAW,gBAAgB,IAAI,CAAC,SAAS;YACzC,UAAU,gBAAgB,IAAI,CAAC,QAAQ;YACvC,aAAa;QACf;QACA,OAAO;YAAE,QAAQ;YAAQ,OAAO;QAAK;IACvC,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,uCAAuC;QACrD,OAAO;YAAE,OAAO;QAAyE;IAC3F;AACF;;;IA3DsB;IA8BA;;AA9BA,+OAAA;AA8BA,+OAAA","debugId":null}},
    {"offset": {"line": 496, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/.next-internal/server/app/%28main%29/journal/page/actions.js%20%28server%20actions%20loader%29"],"sourcesContent":["export {getAIPrompt as '600e07a88e4169a5a9c17303a537a745be1946228d'} from 'ACTIONS_MODULE0'\n"],"names":[],"mappings":";AAAA","debugId":null}},
    {"offset": {"line": 554, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG1B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 635, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/label.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const Label = registerClientReference(\n    function() { throw new Error(\"Attempted to call Label() from the server but Label is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/label.tsx <module evaluation>\",\n    \"Label\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,QAAQ,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACvC;IAAa,MAAM,IAAI,MAAM;AAA0N,GACvP,6DACA","debugId":null}},
    {"offset": {"line": 649, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/label.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const Label = registerClientReference(\n    function() { throw new Error(\"Attempted to call Label() from the server but Label is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/label.tsx\",\n    \"Label\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,QAAQ,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACvC;IAAa,MAAM,IAAI,MAAM;AAA0N,GACvP,yCACA","debugId":null}},
    {"offset": {"line": 663, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 673, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/textarea.tsx"],"sourcesContent":["import * as React from 'react';\n\nimport {cn} from '@/lib/utils';\n\nconst Textarea = React.forwardRef<HTMLTextAreaElement, React.ComponentProps<'textarea'>>(\n  ({className, ...props}, ref) => {\n    return (\n      <textarea\n        className={cn(\n          'flex min-h-[80px] w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm',\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    );\n  }\n);\nTextarea.displayName = 'Textarea';\n\nexport {Textarea};\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAEA,MAAM,yBAAW,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAC9B,CAAC,EAAC,SAAS,EAAE,GAAG,OAAM,EAAE;IACtB,qBACE,8OAAC;QACC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,qTACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AAEF,SAAS,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 701, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/app/covenant-ember.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const CovenantEmber = registerClientReference(\n    function() { throw new Error(\"Attempted to call CovenantEmber() from the server but CovenantEmber is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/app/covenant-ember.tsx <module evaluation>\",\n    \"CovenantEmber\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,gBAAgB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC/C;IAAa,MAAM,IAAI,MAAM;AAA0O,GACvQ,uEACA","debugId":null}},
    {"offset": {"line": 715, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/app/covenant-ember.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const CovenantEmber = registerClientReference(\n    function() { throw new Error(\"Attempted to call CovenantEmber() from the server but CovenantEmber is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/app/covenant-ember.tsx\",\n    \"CovenantEmber\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,gBAAgB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC/C;IAAa,MAAM,IAAI,MAAM;AAA0O,GACvQ,mDACA","debugId":null}},
    {"offset": {"line": 729, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 739, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/%28main%29/journal/page.tsx"],"sourcesContent":["import {\n  Card,\n  CardContent,\n  CardDescription,\n  CardHeader,\n  CardTitle,\n  CardFooter\n} from '@/components/ui/card';\nimport { Label } from '@/components/ui/label';\nimport { Textarea } from '@/components/ui/textarea';\nimport { Button } from '@/components/ui/button';\nimport { CovenantEmber } from '@/components/app/covenant-ember';\nimport { Separator } from '@/components/ui/separator';\n\nexport default function JournalPage() {\n  // Dummy data for demonstration\n  const verseForJournaling = \"Alma 32:21\";\n  const userJournalEntries = `Today I was thinking about faith. It's hard sometimes when you can't see the results. The idea of an experiment on the word is interesting. I tried to be more patient with my kids, even when it was difficult. I felt a small sense of peace afterward. Maybe that's the seed swelling.`;\n\n  return (\n    <div className=\"space-y-8\">\n       <div>\n        <h1 className=\"text-3xl md:text-4xl font-bold font-headline\">Fulfillment Journal</h1>\n        <p className=\"text-lg text-muted-foreground\">\n          Log spiritual experiences and reflect on covenant fulfillment.\n        </p>\n      </div>\n      <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-8\">\n        <Card className=\"lg:col-span-2 shadow-lg\">\n          <CardHeader>\n            <CardTitle className=\"font-headline text-2xl\">New Journal Entry</CardTitle>\n            <CardDescription>\n              Record your thoughts and experiences related to the scriptures.\n            </CardDescription>\n          </CardHeader>\n          <CardContent>\n            <div className=\"grid w-full gap-4\">\n               <div className=\"flex flex-col space-y-2\">\n                <Label htmlFor=\"journal-entry\">Your Reflections</Label>\n                <Textarea id=\"journal-entry\" placeholder=\"Write about your experiences, feelings, and insights...\" className=\"min-h-[250px]\" />\n              </div>\n            </div>\n          </CardContent>\n          <CardFooter className=\"flex justify-end\">\n             <Button>Save Entry</Button>\n          </CardFooter>\n        </Card>\n\n        <Card className=\"lg:col-span-1 shadow-lg\">\n           <CardHeader>\n            <CardTitle className=\"font-headline text-2xl\">Grace Buffer</CardTitle>\n            <CardDescription>\n              AI-powered prompts for deeper reflection.\n            </CardDescription>\n          </CardHeader>\n          <CardContent>\n             <CovenantEmber verse={verseForJournaling} journalEntries={userJournalEntries} />\n          </CardContent>\n        </Card>\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AAAA;AAQA;AACA;AACA;AACA;;;;;;;AAGe,SAAS;IACtB,+BAA+B;IAC/B,MAAM,qBAAqB;IAC3B,MAAM,qBAAqB,CAAC,yRAAyR,CAAC;IAEtT,qBACE,8OAAC;QAAI,WAAU;;0BACZ,8OAAC;;kCACA,8OAAC;wBAAG,WAAU;kCAA+C;;;;;;kCAC7D,8OAAC;wBAAE,WAAU;kCAAgC;;;;;;;;;;;;0BAI/C,8OAAC;gBAAI,WAAU;;kCACb,8OAAC,gIAAA,CAAA,OAAI;wBAAC,WAAU;;0CACd,8OAAC,gIAAA,CAAA,aAAU;;kDACT,8OAAC,gIAAA,CAAA,YAAS;wCAAC,WAAU;kDAAyB;;;;;;kDAC9C,8OAAC,gIAAA,CAAA,kBAAe;kDAAC;;;;;;;;;;;;0CAInB,8OAAC,gIAAA,CAAA,cAAW;0CACV,cAAA,8OAAC;oCAAI,WAAU;8CACZ,cAAA,8OAAC;wCAAI,WAAU;;0DACd,8OAAC,iIAAA,CAAA,QAAK;gDAAC,SAAQ;0DAAgB;;;;;;0DAC/B,8OAAC,oIAAA,CAAA,WAAQ;gDAAC,IAAG;gDAAgB,aAAY;gDAA0D,WAAU;;;;;;;;;;;;;;;;;;;;;;0CAInH,8OAAC,gIAAA,CAAA,aAAU;gCAAC,WAAU;0CACnB,cAAA,8OAAC,kIAAA,CAAA,SAAM;8CAAC;;;;;;;;;;;;;;;;;kCAIb,8OAAC,gIAAA,CAAA,OAAI;wBAAC,WAAU;;0CACb,8OAAC,gIAAA,CAAA,aAAU;;kDACV,8OAAC,gIAAA,CAAA,YAAS;wCAAC,WAAU;kDAAyB;;;;;;kDAC9C,8OAAC,gIAAA,CAAA,kBAAe;kDAAC;;;;;;;;;;;;0CAInB,8OAAC,gIAAA,CAAA,cAAW;0CACT,cAAA,8OAAC,8IAAA,CAAA,gBAAa;oCAAC,OAAO;oCAAoB,gBAAgB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAMvE","debugId":null}}]
}